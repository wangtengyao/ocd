?setClass
a = matrix(0,4,9)
class(a)
?chisq.test
?setNames
setClass('OnlineChangepoitDetector',
slots = c(
method = 'character',
state = 'list',
statistics = 'numeric'
thresholds = 'numeric'
),
prototype = list(
method = 'ocd',
state = list(A=matrix(0, p, 1), tail=matrix(0, p, floor(log2(p))*2+4)),
statistics = setNames(rep(0,3), c('diag', 'off_d', 'off_s')),
threshold = setNames(rep(0,3), c('diag', 'off_d', 'off_s'))
)
)
setClass('OnlineChangepoitDetector',
slots = c(
p = 'integer',
method = 'character',
state = 'list',
statistics = 'numeric'
thresholds = 'numeric'
),
prototype = list(
p = 10
method = 'ocd',
state = list(A=matrix(0, p, 1), tail=matrix(0, p, floor(log2(p))*2+4)),
statistics = setNames(rep(0,3), c('diag', 'off_d', 'off_s')),
threshold = setNames(rep(0,3), c('diag', 'off_d', 'off_s'))
)
)
setClass('OnlineChangepoitDetector',
slots = c(
p = 'integer',
method = 'character',
state = 'list',
statistics = 'numeric',
thresholds = 'numeric'
),
prototype = list(
p = 10
method = 'ocd',
state = list(A=matrix(0, p, 1), tail=matrix(0, p, floor(log2(p))*2+4)),
statistics = setNames(rep(0,3), c('diag', 'off_d', 'off_s')),
threshold = setNames(rep(0,3), c('diag', 'off_d', 'off_s'))
)
)
p = 'integer',
method = 'character',
state = 'list',
statistics = 'numeric',
thresholds = 'numeric'
)
c(
p = 'integer',
method = 'character',
state = 'list',
statistics = 'numeric',
thresholds = 'numeric'
)
list(
p = 10
method = 'ocd',
state = list(A=matrix(0, p, 1), tail=matrix(0, p, floor(log2(p))*2+4)),
statistics = setNames(rep(0,3), c('diag', 'off_d', 'off_s')),
threshold = setNames(rep(0,3), c('diag', 'off_d', 'off_s'))
)
setClass('OnlineChangepoitDetector',
slots = c(
p = 'integer',
method = 'character',
state = 'list',
statistics = 'numeric',
thresholds = 'numeric'
),
prototype = list(
p = 10,
method = 'ocd',
state = list(A=matrix(0, p, 1), tail=matrix(0, p, floor(log2(p))*2+4)),
statistics = setNames(rep(0,3), c('diag', 'off_d', 'off_s')),
threshold = setNames(rep(0,3), c('diag', 'off_d', 'off_s'))
)
)
setClass('OnlineChangepoitDetector',
slots = c(
p = 'integer',
method = 'character',
state = 'list',
statistics = 'numeric',
thresholds = 'numeric'
),
prototype = list(
p = 10,
method = 'ocd',
state = list(A=matrix(0, 10, 1), tail=matrix(0, 10, floor(log2(10))*2+4)),
statistics = setNames(rep(0,3), c('diag', 'off_d', 'off_s')),
threshold = setNames(rep(0,3), c('diag', 'off_d', 'off_s'))
)
)
setClass('OnlineChangepoitDetector',
slots = c(
p = 'integer',
method = 'character',
state = 'list',
statistics = 'numeric',
thresholds = 'numeric'
),
prototype = list(
p = 10,
method = 'ocd',
state = list(A=matrix(0, 10, 1), tail=matrix(0, 10, floor(log2(10))*2+4)),
statistics = setNames(rep(0,3), c('diag', 'off_d', 'off_s')),
thresholds = setNames(rep(0,3), c('diag', 'off_d', 'off_s'))
)
)
setClass('OnlineChangepoitDetector',
slots = c(
p = 'integer',
method = 'character',
state = 'list',
statistics = 'numeric',
thresholds = 'numeric'
),
prototype = list(
p = 10L,
method = 'ocd',
state = list(A=matrix(0, 10, 1), tail=matrix(0, 10, floor(log2(10))*2+4)),
statistics = setNames(rep(0,3), c('diag', 'off_d', 'off_s')),
thresholds = setNames(rep(0,3), c('diag', 'off_d', 'off_s'))
)
)
?switch
a = list(!)
a = list(1)
a
unlist(a)
a = list(1,2)
a
unlist(a)
a = list(1)
a[[1]]
unlist(a)
unlist(a)[1]
a
a$2
a$a
a = list(1,2,3)
a[1]
unlist(a[1])
a = list(p0=1,w=200,gamma=10)
a['p0']
names(a)
b=list(1,2,3)
names(b)
?switch
x <- factor(c("apple", "orange", "orange", "pear"))
class(x)
typeof(x)
attributes(x)
x$levels
?structure
new_OCD <- function(p, beta, thresh, sparsity='auto'){
L <- floor(log2(p))*2+4)
A <- matrix(0, p, 1)
tail <- matrix(0, p, L)
stats <- setNames(c(0,0,0), c('diag','off_d','off_s'))
detector <- structure('changepoint detector',
method='ocd',
dim=p,
nobs=0,
baseline_mean=rep(0,p),
status='initialised',
tracked=list(A=A, tail=tail),
statistics=stats,
thresholds=thresh,
class='ChangepointDetector')
}
new_OCD <- function(p, beta, thresh, sparsity='auto'){
L <- floor(log2(p))*2+4)
A <- matrix(0, p, 1)
tail <- matrix(0, p, L)
stats <- setNames(c(0,0,0), c('diag','off_d','off_s'))
detector <- structure('changepoint detector',
method='ocd',
dim=p,
nobs=0,
baseline_mean=rep(0,p),
status='initialised',
tracked=list(A=A, tail=tail),
statistics=stats,
thresholds=thresh,
class='ChangepointDetector')
return(detector)
}
new_OCD <- function(p, beta, thresh, sparsity='auto'){
L <- floor(log2(p))*2+4)
A <- matrix(0, p, 1)
tail <- matrix(0, p, L)
stats <- setNames(c(0,0,0), c('diag','off_d','off_s'))
detector <- structure('changepoint detector',
method='ocd',
dim=p,
nobs=0,
baseline_mean=rep(0,p),
status='initialised',
tracked=list(A=A, tail=tail),
statistics=stats,
thresholds=thresh,
class='ChangepointDetector')
return(detector)
}
new_OCD <- function(p, beta, thresh, sparsity='auto'){
L <- floor(log2(p))*2+4
A <- matrix(0, p, 1)
tail <- matrix(0, p, L)
stats <- setNames(c(0,0,0), c('diag','off_d','off_s'))
detector <- structure('changepoint detector',
method='ocd',
dim=p,
nobs=0,
baseline_mean=rep(0,p),
status='initialised',
tracked=list(A=A, tail=tail),
statistics=stats,
thresholds=thresh,
class='ChangepointDetector')
return(detector)
}
detector <- new_OCD(100, 1, c(100,100,100))
new_OCD <- function(p, beta, thresh, sparsity='auto'){
L <- floor(log2(p))*2+4
A <- matrix(0, p, 1)
tail <- matrix(0, p, L)
stats <- setNames(c(0,0,0), c('diag','off_d','off_s'))
detector <- structure('changepoint detector',
method='ocd',
data_dim=p,
nobs=0,
baseline_mean=rep(0,p),
status='initialised',
tracked=list(A=A, tail=tail),
statistics=stats,
thresholds=thresh,
class='ChangepointDetector')
return(detector)
}
detector <- new_OCD(100, 1, c(100,100,100))
detector
str(detector)
new_OCD <- function(p, beta, thresh, sparsity='auto'){
L <- floor(log2(p))*2+4
A <- matrix(0, p, 1)
tail <- matrix(0, p, L)
stats <- setNames(c(0,0,0), c('diag','off_d','off_s'))
detector <- structure(
method='ocd',
data_dim=p,
nobs=0,
baseline_mean=rep(0,p),
status='initialised',
tracked=list(A=A, tail=tail),
statistics=stats,
thresholds=thresh,
class='ChangepointDetector')
return(detector)
}
detector <- new_OCD(100, 1, c(100,100,100))
new_OCD <- function(p, beta, thresh, sparsity='auto'){
L <- floor(log2(p))*2+4
A <- matrix(0, p, 1)
tail <- matrix(0, p, L)
stats <- setNames(c(0,0,0), c('diag','off_d','off_s'))
detector <- structure(NULL,
method='ocd',
data_dim=p,
nobs=0,
baseline_mean=rep(0,p),
status='initialised',
tracked=list(A=A, tail=tail),
statistics=stats,
thresholds=thresh,
class='ChangepointDetector')
return(detector)
}
detector <- new_OCD(100, 1, c(100,100,100))
new_OCD <- function(p, beta, thresh, sparsity='auto'){
L <- floor(log2(p))*2+4
A <- matrix(0, p, 1)
tail <- matrix(0, p, L)
stats <- setNames(c(0,0,0), c('diag','off_d','off_s'))
detector <- structure(list(),
method='ocd',
data_dim=p,
nobs=0,
baseline_mean=rep(0,p),
status='initialised',
tracked=list(A=A, tail=tail),
statistics=stats,
thresholds=thresh,
class='ChangepointDetector')
return(detector)
}
detector <- new_OCD(100, 1, c(100,100,100))
str(detector)
new_OCD <- function(p, beta, thresh, sparsity='auto'){
L <- floor(log2(p))*2+4
A <- matrix(0, p, 1)
tail <- matrix(0, p, L)
stats <- setNames(c(0,0,0), c('diag','off_d','off_s'))
detector <- structure(list(),
data_dim = p,                      # data attributes
nobs = 0,
method = 'ocd',                    # algorithm attributes
param = setNames(beta, 'beta'),
thresholds = thresh,
baseline_mean = rep(0,p),          # computed quantities
tracked = list(A=A, tail=tail),
statistics = stats,
status = 'initialised',
class = 'ChangepointDetector')
return(detector)
}
